{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/getMovie.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","movieUrl","fetch","getDatas","json","preparedDatas","hasOwnProperty","newMovieInfo","FindMovie","state","searchValue","newMovie","errorInput","isFinded","handleInput","e","value","target","setState","findMovie","preparedValue","replace","then","reset","this","props","hasAlready","addFilm","onSubmit","preventDefault","htmlFor","type","id","placeholder","onChange","onClick","disabled","React","Component","App","data","newFilm","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3856bbe3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { MoviesCard } from '../interfaces';\n\ntype Props = MoviesCard;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { MoviesCard } from './interfaces';\n\nexport const getMovie = async (title: string) => {\n  const movieUrl = `https://www.omdbapi.com/?apikey=12dad60c&t=${title}`;\n  const getDatas = await fetch(movieUrl);\n  const preparedDatas = await getDatas.json();\n\n  if (preparedDatas.hasOwnProperty('Error')) {\n    return false;\n  }\n\n  const newMovieInfo: MoviesCard = {\n    description: '',\n    title: '',\n    imdbId: '',\n    imdbUrl: '',\n    imgUrl: '',\n  };\n\n  for (const key in preparedDatas) {\n    switch (key) {\n      case 'Title':\n        newMovieInfo.title = preparedDatas[key];\n        break;\n\n      case 'Plot':\n        newMovieInfo.description = preparedDatas[key];\n        break;\n\n      case 'Poster':\n        newMovieInfo.imgUrl = preparedDatas[key];\n        break;\n\n      case 'imdbID':\n        newMovieInfo.imdbId = preparedDatas[key];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const imdbUrl = `https://www.imdb.com/title/${newMovieInfo.imdbId}/?ref_=nv_sr_srsg_0`;\n\n  newMovieInfo.imdbUrl = imdbUrl;\n\n  return newMovieInfo;\n};\n","import React from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../getMovie';\nimport { MoviesCard, FindMovState } from '../interfaces';\n\ninterface Props {\n  hasAlready: boolean;\n  addFilm: (newFilm: MoviesCard) => void;\n}\n\nexport class FindMovie extends React.Component<Props> {\n  state: FindMovState = {\n    searchValue: '',\n    newMovie: null,\n    errorInput: false,\n    isFinded: false,\n  };\n\n  handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    this.setState(() => ({ searchValue: value }),\n      () => {\n        const { searchValue } = this.state;\n\n        if (searchValue) {\n          this.setState({ errorInput: false });\n        } else {\n          this.setState({ errorInput: true, newMovie: null });\n        }\n      });\n  };\n\n  findMovie = () => {\n    const { searchValue } = this.state;\n\n    if (!searchValue) {\n      this.setState({ errorInput: true });\n      return;\n    } else {\n      this.setState({ errorInput: false });\n    }\n\n    const preparedValue: string = searchValue.replace(/ /g, '+');\n\n    getMovie(preparedValue)\n      .then(movie => this.setState({ newMovie: movie },\n        () => {\n          const { newMovie } = this.state;\n\n          if (newMovie) {\n            this.setState({ isFinded: true });\n          }\n        }));\n  };\n\n  reset = () => {\n    this.setState({\n      searchValue: '',\n      newMovie: null,\n      errorInput: false,\n      isFinded: false,\n    });\n  };\n\n  render() {\n    const {\n      searchValue, newMovie, errorInput, isFinded,\n    } = this.state;\n    const { hasAlready, addFilm } = this.props;\n\n    return (\n      <>\n        <form\n          className=\"find-movie\"\n          onSubmit={e => {\n            e.preventDefault();\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={searchValue}\n                placeholder=\"Enter a title to search\"\n                className={errorInput ? 'is-danger input' : 'input'}\n                onChange={this.handleInput}\n              />\n            </div>\n            {errorInput && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-light\"\n                onClick={this.findMovie}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled={!isFinded}\n                onClick={() => {\n                  if (newMovie) {\n                    addFilm(newMovie);\n                  }\n                  this.reset();\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {newMovie ? (\n            <MovieCard {...newMovie} />\n          ) : (\n              <p>Write correctly film title.</p>\n            )}\n          {hasAlready && (\n            <p>This movie already there</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport { MoviesCard } from './components/interfaces';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    hasAlready: false,\n  };\n\n  addFilm = (newFilm: MoviesCard): void => {\n    this.setState({ hasAlready: false });\n    const { movies } = this.state;\n\n    const hasAlready = movies\n      .some(movie => movie.imdbId === newFilm.imdbId);\n\n    if (!hasAlready) {\n      this.setState({ movies: [...data, newFilm] });\n    } else {\n      this.setState({ hasAlready: true });\n    }\n  };\n\n  render() {\n    const { movies, hasAlready } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie hasAlready={hasAlready} addFilm={this.addFilm} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}